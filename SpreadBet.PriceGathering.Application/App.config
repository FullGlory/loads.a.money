<?xml version="1.0" encoding="utf-8"?>
<configuration>

  <configSections>
	<section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration" />
	<section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=4.4.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
	<!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
  </configSections>

  <appSettings>
	<add key="defaultApplicationName" value="GatherPriceData"/>
  </appSettings>

  <unity>
	<containers>

	  <container name="GatherPriceData">
		
		<!--
		  
				  RECIEVER				->	  PROCESS  ->		  TRANSMITTER
		  (LiveCharts_co_uk_PriceFeed)       (Default)	    (SendStockToServiceLayer)
		      (UK Market Filter)      
			  
		-->

		<instances>
		  <add name="timePeriodLengthSecs" type="System.Int32" value="1800" />
		  <add name="marketsOpenAt" type="System.String" value="08:00:00" />
		  <add name="marketsStayOpenFor" type="System.String" value="07:30:00" />
		</instances>

		<!--
		Specifies an operational window in which the main process will execute -->
		<register name="UKMarket"
				  type="SpreadBet.Common.Interfaces.IStockMarket, SpreadBet.Common"
				  mapTo="SpreadBet.Common.Components.StockMarket, SpreadBet.Common">
		  
		  <constructor>
			<param name="open" dependencyName="marketsOpenAt" />
			<param name="close" dependencyName="marketsStayOpenFor" />
			<param name="regionName" value="en-GB" />
		  </constructor>
		  
		</register>

		<!--
		This will retrieve price information for the UK Market using the scraper provided -->
		<register type="SpreadBet.Common.Interfaces.IPipelineReceiver, SpreadBet.Common"
				  mapTo="SpreadBet.Common.Components.LiveCharts_co_uk_PriceFeed, SpreadBet.Common">

		  <constructor>
			<param name="scraper"/>
			<param name="stockMarket" dependencyName="UKMarket"/>
			<param name="timePeriodLengthSecs"  dependencyName="timePeriodLengthSecs"/>
		  </constructor>
		  
		</register>

		<!--
		This will send stocks that are recieved through to the service layer -->
		<register type="SpreadBet.Common.Interfaces.IPipelineTransmitter, SpreadBet.Common"
				  mapTo="SpreadBet.Common.Components.SendStocksToServiceLayer, SpreadBet.Common" />

		<!-- 
		This will be the process that stitches the receiver and transmitter together -->
		<register type="SpreadBet.Common.Interfaces.IPipelineProcess, SpreadBet.Common"
				  mapTo="SpreadBet.Common.Components.PipelineProcess, SpreadBet.Common" />

		<!-- 
		The scraper is used to retrieve data from the stock web sites. -->
		<register type="SpreadBet.Common.Interfaces.IScraper, SpreadBet.Common"
                  mapTo="SpreadBet.Common.Components.HTTPScraper, SpreadBet.Common" />

		<!-- 
		Only process stocks where the identifier begins with an a, b or c-->
		<register type="SpreadBet.Common.Interfaces.IPipelineFilter, SpreadBet.Common"
				  mapTo="SpreadBet.Common.Components.DynamicFilter, SpreadBet.Common">
		  <constructor>
			<param name="expression" value="Regex.IsMatch(Identifier, '(?i)^[a-c\d]')" />
		  </constructor>
		</register>
		
	  </container>

	</containers>
	
  </unity>

  <startup>
	<supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.0" />
  </startup>

  <entityFramework>
	<defaultConnectionFactory type="System.Data.Entity.Infrastructure.SqlConnectionFactory, EntityFramework" />
  </entityFramework>
</configuration>