<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
	<section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration"/>
  </configSections>

  <appSettings>
    <add key="PollingInterval.GatherPriceData" value="30"/>
  </appSettings>

  <connectionStrings>
    <add name="SpreadBet" connectionString="Server=JPCGOODBY\JPCGOODBY;Database=SpreadBet;Trusted_Connection=True;" providerName="System.Data.SqlClient" />
    <!--<add name="SpreadBet" connectionString="Server=PAUL-LAPTOP\SQLEXPRESS;Database=SpreadBet;Trusted_Connection=True;MultipleActiveResultSets=True" providerName="System.Data.SqlClient" />-->
  </connectionStrings>

  <unity>
    <containers>

      <container name="MigrateDatabase">

        <register type="SpreadBet.Common.Interfaces.IExecutableApplication, SpreadBet.Common" mapTo="SpreadBet.Application.MigrateDatabase, SpreadBet.Application">
          <lifetime type="singleton" />
        </register>

      </container>

      <container name="GatherPriceData">

        <!-- 
		Secify the application that will be retrieving the stock price information -->
        <register type="SpreadBet.Common.Interfaces.IExecutableApplication, SpreadBet.Common" 
				  mapTo="SpreadBet.Application.GatherPriceData, SpreadBet.Application">
          <lifetime type="singleton" />
        </register>

        <!-- 
		The compoment that will be used to gather price informaiton from the designated site. -->
        <register type="SpreadBet.Common.Interfaces.IStockPriceProvider, SpreadBet.Common" 
				  mapTo="SpreadBet.Common.Components.LiveCharts_co_uk_PriceFeed, SpreadBet.Common">
          <lifetime type="singleton" />
        </register>

        <!-- 
		The scraper is used to retrieve data from the stock web sites. -->
        <register type="SpreadBet.Common.Interfaces.IScraper, SpreadBet.Common" 
				  mapTo="SpreadBet.Common.Components.HTTPScraper, SpreadBet.Common">
          <lifetime type="singleton" />
        </register>

        <!-- 
		The stock data provider will provide the ability to get and save stock data. -->
        <register type="SpreadBet.Common.Interfaces.IStockDataProvider, SpreadBet.Common" 
				  mapTo="SpreadBet.Common.Components.StockDataProvider, SpreadBet.Common">
          <lifetime type="singleton" />
        </register>

        <!-- Entity framework repository. -->
        <register type="SpreadBet.Domain.Interfaces.IRepository, SpreadBet.Domain.Interfaces" 
				  mapTo="SpreadBet.Infrastructure.Data.EFRepository, SpreadBet.Infrastructure.Data">
          <lifetime type="singleton" />
        </register>

      </container>

      <container name="GetBetDecisions">

        <instances>
          <add name="periods" type="System.Int32" value="5" />
          <add name="maxBidAmount" type="System.Decimal" value="100.00"/>
          <add name="maxLoss" type="System.Decimal" value="200.00"/>
          <add name="spreadLossRatio" type="System.Decimal" value="0.5"/>
        </instances>

        <!-- 
		Secify the application that will be retrieving the stock price information -->
        <register type="SpreadBet.Common.Interfaces.IExecutableApplication, SpreadBet.Common"
				  mapTo="SpreadBet.Application.GetBetDecisions, SpreadBet.Application">
          <lifetime type="singleton" />
          <constructor>
            <param name="stockDataProvider"/>
            <param name="stockFilter" dependencyName="CompositeStockFilter"/>
            <param name="investDecider"/>
            <param name="commandBus"/>
            <param name="priceUpdate"/>
          </constructor>
        </register>

        <!-- 
		    This component will return the bed decisions based on the stock price data privided to it. -->
        <register type="SpreadBet.Common.Interfaces.IInvestDecider, SpreadBet.Common"
				  mapTo="SpreadBet.Common.Components.DecisionByGrowthAndCurrentPosition, SpreadBet.Common">
          <lifetime type="singleton" />
          <constructor>
            <param name="stockHistoryDataProvider"/>
            <param name="accountDataProvider"/>
            <param name="periods" dependencyName="periods"/>
            <param name="maxBidAmount" dependencyName="maxBidAmount"/>
            <param name="maxLoss" dependencyName="maxLoss"/>
            <param name="spreadLossRatio" dependencyName="spreadLossRatio"/>
          </constructor>
        </register>

        <!-- 
		The stock data provider will provide the ability to get and save stock data. -->
        <register type="SpreadBet.Common.Interfaces.IStockDataProvider, SpreadBet.Common"
                  mapTo="SpreadBet.Common.Components.StockDataProvider, SpreadBet.Common">
          <lifetime type="singleton" />
        </register>

        <!-- 
		Used to retrieve historical stock prices -->
        <register type="SpreadBet.Common.Interfaces.IStockHistoryDataProvider, SpreadBet.Common"
				      mapTo="SpreadBet.Common.Components.StockHistoryDataProvider, SpreadBet.Common">
          <lifetime type="singleton" />
        </register>

        <!-- 
		Used to retrieve information about our account -->
        <register type="SpreadBet.Common.Interfaces.IAccountDataProvider, SpreadBet.Common"
				      mapTo="SpreadBet.Common.Components.AccountDataProvider, SpreadBet.Common">
          <lifetime type="singleton" />
        </register>

        <!-- 
		Used to retrieve information about our portfolio -->
        <register type="SpreadBet.Common.Interfaces.IPortfolioDataProvider, SpreadBet.Common"
				      mapTo="SpreadBet.Common.Components.PortfolioDataProvider, SpreadBet.Common">
          <lifetime type="singleton" />
        </register>

        <!-- 
		This component will group together different filtering techniques to determine stocks which are attractive. -->
        <register name="CompositeStockFilter"
				      type="SpreadBet.Common.Interfaces.IStockFilter, SpreadBet.Common"
				      mapTo="SpreadBet.Common.Components.CompositeStockFilter, SpreadBet.Common">
          <lifetime type="singleton" />
          <constructor>
            <param name="filters">
              <array>
                <dependency name="ExistingStockRemoval"/>
                <dependency name="ConsistentChangeFilter"/>
                <dependency name="MinimumRateOfChange"/>
              </array>
            </param>
          </constructor>
        </register>

        <!-- 
		Removes any stock we already have in our portfolio -->
        <register name="ExistingStockRemoval"
				      type="SpreadBet.Common.Interfaces.IStockFilter, SpreadBet.Common"
				      mapTo="SpreadBet.Common.Components.ExistingStockRemovalFilter, SpreadBet.Common">
          <lifetime type="singleton" />
        </register>

        <!-- 
		Removes any stock we already have in our portfolio -->
        <register name="ConsistentChangeFilter"
				      type="SpreadBet.Common.Interfaces.IStockFilter, SpreadBet.Common"
				      mapTo="SpreadBet.Common.Components.ConsistentChangeStockFilter, SpreadBet.Common">
          <lifetime type="singleton" />
          <constructor>
            <param name="stockHistoryProvider"/>
            <param name="periods" dependencyName="periods"/>
          </constructor>
        </register>

        <!-- 
		Removes any stock we already have in our portfolio -->
        <register name="MinimumRateOfChange"
				      type="SpreadBet.Common.Interfaces.IStockFilter, SpreadBet.Common"
				      mapTo="SpreadBet.Common.Components.MinimumRateOfChangeStockFilter, SpreadBet.Common">
          <lifetime type="singleton" />
          <constructor>
            <param name="stockHistoryProvider"/>
            <param name="periods" dependencyName="periods"/>
            <param name="reductionRate" value="25"/>
            <!-- 25% -->
            <param name="growthRate" value="25"/>
            <!-- 25% -->
          </constructor>
        </register>

        <register type="SpreadBet.CommandBus.ICommandHandlerFactory, SpreadBet.CommandBus"
                  mapTo="SpreadBet.CommandBus.UnityCommandHandlerFactory, SpreadBet.CommandBus">
          <lifetime type="singleton" />
        </register>

        <register type="SpreadBet.CommandBus.ICommandSender, SpreadBet.CommandBus"
                  mapTo="SpreadBet.CommandBus.SimpleCommandBus, SpreadBet.CommandBus">
          <lifetime type="singleton" />
          <constructor>
            <param name="commandHandlerFactory"/>
          </constructor>
        </register>

        <register type="SpreadBet.CommandBus.ICommandHandler`1, SpreadBet.CommandBus"
                  mapTo="SpreadBet.Domain.CommandHandlers.PlaceBetCommandHandler, SpreadBet.Domain.CommandHandlers">
          <lifetime type="singleton" />
          <constructor>
            <param name="accountDataProvider"/>
            <param name="repository"/>
            <param name="betController"/>
          </constructor>
        </register>

        <!-- Entity framework repository. -->
        <register type="SpreadBet.Domain.Interfaces.IRepository, SpreadBet.Domain.Interfaces"
                mapTo="SpreadBet.Infrastructure.Data.EFRepository, SpreadBet.Infrastructure.Data">
          <lifetime type="singleton" />
        </register>

        <!-- Automation settings. -->
        <register type="SpreadBet.Common.Interfaces.IAutomationSettings, SpreadBet.Common"
                  mapTo="SpreadBet.Common.Components.Automation.BullBearingsSettings, SpreadBet.Common">
          <lifetime type="singleton" />
        </register>

        <!-- Automation driver. -->
        <register type="SpreadBet.Common.Interfaces.IAutomationDriver, SpreadBet.Common"
                  mapTo="SpreadBet.Common.Components.Automation.PhantomDriver, SpreadBet.Common">
          <lifetime type="singleton" />
        </register>

        <!-- Automation settings. -->
        <register type="SpreadBet.Common.Interfaces.IAutomationProvider, SpreadBet.Common"
                  mapTo="SpreadBet.Common.Components.Automation.BullBearingsProvider, SpreadBet.Common">
          <lifetime type="singleton" />
        </register>

        <!-- Bet controller. -->
        <register type="SpreadBet.Common.Interfaces.IBetController, SpreadBet.Common"
                  mapTo="SpreadBet.Common.Components.Automation.BullBearingsController, SpreadBet.Common">
          <lifetime type="singleton" />
        </register>

        <!-- Price update. -->
        <register type="SpreadBet.Common.Interfaces.IUpdate, SpreadBet.Common"
                  mapTo="SpreadBet.Common.Components.PriceUpdate, SpreadBet.Common">
          <lifetime type="singleton" />
        </register>

      </container>

    </containers>
  </unity>
  
</configuration>