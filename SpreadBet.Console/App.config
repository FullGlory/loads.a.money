<?xml version="1.0" encoding="utf-8"?>
<configuration>

  <configSections>
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration" />
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=4.4.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
    <section name="nlog" type="NLog.Config.ConfigSectionHandler, NLog"/>
  </configSections>

  <appSettings>
    <add key="defaultApplicationName" value="GatherPriceData"/>
  </appSettings>

  <connectionStrings>
    <add name="SpreadBet" connectionString="Server=.\SQLEXPRESS;Database=SpreadBet;Trusted_Connection=True;MultipleActiveResultSets=True" providerName="System.Data.SqlClient" />
  </connectionStrings>

  <unity>

    <!-- LoggingBegaviour -->
    <namespace name="SpreadBet.Infrastructure.Unity.Interception"/>
    <assembly name="SpreadBet.Infrastructure.Unity"/>

    <sectionExtension type="Microsoft.Practices.Unity.InterceptionExtension.Configuration.InterceptionConfigurationExtension,Microsoft.Practices.Unity.Interception.Configuration" />

    <containers>
      <container name="GatherPriceData">
        <extension type="Interception"/>

        <instances>
          <add name="schedulerConfig" type="System.String" value="00:00:10"/>
        </instances>

        <register type="SpreadBet.Infrastructure.Messaging.ISender`1[[SpreadBet.Domain.StockPrice,SpreadBet.Domain]],SpreadBet.Infrastructure"
                  mapTo="SpreadBet.Infrastructure.Messaging.StraightThroughChannel`1[[SpreadBet.Domain.StockPrice,SpreadBet.Domain]],SpreadBet.Infrastructure">
          <lifetime type="singleton" />
          <interceptor type="InterfaceInterceptor" />
          <interceptionBehavior type="LoggingBehaviour"/>
        </register>

        <register type="SpreadBet.Infrastructure.Messaging.IReceiver`1[[SpreadBet.Domain.StockPrice,SpreadBet.Domain]],SpreadBet.Infrastructure"
                  mapTo="SpreadBet.Infrastructure.Messaging.StraightThroughChannel`1[[SpreadBet.Domain.StockPrice,SpreadBet.Domain]],SpreadBet.Infrastructure">
          <lifetime type="singleton" />
        </register>

        <register type="SpreadBet.Scheduler.IScheduler,SpreadBet.Scheduler"
                  mapTo="SpreadBet.Scheduler.Scheduler,SpreadBet.Scheduler">
          <interceptor type="InterfaceInterceptor" />
          <interceptionBehavior type="LoggingBehaviour"/>
          <lifetime type="singleton" />
        </register>

        <register type="SpreadBet.Common.Interfaces.IScraper, SpreadBet.Common"
                  mapTo="SpreadBet.Common.Components.HTTPScraper, SpreadBet.Common">
          <lifetime type="singleton" />
        </register>

        <register type="SpreadBet.Infrastructure.Logging.ILogger, SpreadBet.Infrastructure"
                  mapTo="SpreadBet.Infrastructure.Logging.NLog.NLogLogger, SpreadBet.Infrastructure.Logging.NLog">
          <lifetime type="singleton" />
        </register>

        <register type="SpreadBet.MarketData.IStockPriceBot, SpreadBet.MarketData"
                  mapTo="SpreadBet.MarketData.LiveChartsStockPriceBot, SpreadBet.MarketData">
          <interceptor type="InterfaceInterceptor" />
          <interceptionBehavior type="LoggingBehaviour"/>
          <lifetime type="singleton" />
        </register>

        <register name="publisher"
                  type="SpreadBet.Infrastructure.IProcessor, SpreadBet.Infrastructure"
                  mapTo="SpreadBet.MarketData.PriceFeedBotProcessor, SpreadBet.MarketData">
          <interceptor type="InterfaceInterceptor" />
          <interceptionBehavior type="LoggingBehaviour"/>
          <lifetime type="singleton" />
          <constructor>
            <param name="scheduler"/>
            <param name="bot"/>
            <param name="priceFeed"/>
            <param name="schedulerConfig" dependencyName="schedulerConfig"/>
          </constructor>
        </register>

        <register type="SpreadBet.Domain.Interfaces.IStockPriceRepository, SpreadBet.Domain.Interfaces"
	                mapTo="SpreadBet.Infrastructure.Data.StockPriceRepository, SpreadBet.Infrastructure.Data">
          <lifetime type="singleton" />
          <interceptor type="InterfaceInterceptor" />
          <interceptionBehavior type="LoggingBehaviour"/>
        </register>

        <register type="SpreadBet.Domain.Interfaces.IRepository, SpreadBet.Domain.Interfaces"
                  mapTo="SpreadBet.Infrastructure.Data.EFRepository, SpreadBet.Infrastructure.Data">
          <lifetime type="singleton" />
          <interceptor type="InterfaceInterceptor" />
          <interceptionBehavior type="LoggingBehaviour"/>          
        </register>

        <register name="subscriber"
                  type="SpreadBet.Infrastructure.IProcessor, SpreadBet.Infrastructure"
                  mapTo="SpreadBet.MarketData.PriceFeedSubscribeProcessor, SpreadBet.MarketData">
          <interceptor type="InterfaceInterceptor" />
          <interceptionBehavior type="LoggingBehaviour"/>
          <lifetime type="singleton" />
        </register>

      </container>
    </containers>
  </unity>

  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.0" />
  </startup>

  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.SqlConnectionFactory, EntityFramework" />
  </entityFramework>

  <nlog xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

    <targets async="true">
      <target name="logfile" xsi:type="File" fileName="log.${shortdate}.txt" layout="${longdate}|${level}|${threadid}|${message}"/>
      <target name="console" xsi:type="Console" layout="${longdate}|${level}|${threadid}|${message}"/>
    </targets>

    <rules>
      <logger name="*" minlevel="Trace" writeTo="logfile" />
      <logger name="*" minlevel="Trace" writeTo="console" />
    </rules>

  </nlog>

</configuration>