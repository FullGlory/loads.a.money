// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18046
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SpreadBet.Acceptance.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Loads Of Money Automation")]
    public partial class LoadsOfMoneyAutomationFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Automation.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Loads Of Money Automation", "In order to become extremely rich, trades need to be triggered automatically", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("1.  Automatically open trades at bullbearings")]
        public virtual void _1_AutomaticallyOpenTradesAtBullbearings()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("1.  Automatically open trades at bullbearings", ((string[])(null)));
#line 4
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Username",
                        "Password"});
            table1.AddRow(new string[] {
                        "jpcgoodby@yahoo.co.uk",
                        "trigger"});
#line 5
 testRunner.Given("the valid account", ((string)(null)), table1, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Code",
                        "Name",
                        "Amount",
                        "Type"});
            table2.AddRow(new string[] {
                        "LLOY",
                        "Lloyds Bank",
                        "100",
                        "BUY"});
            table2.AddRow(new string[] {
                        "RBS",
                        "Royal Bank Of Scotland",
                        "45",
                        "SELL"});
#line 8
 testRunner.And("the following bets", ((string)(null)), table2, "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Code",
                        "Name",
                        "Amount",
                        "Type"});
            table3.AddRow(new string[] {
                        "LLOY",
                        "Lloyds Bank",
                        "100",
                        "BUY"});
            table3.AddRow(new string[] {
                        "RBS",
                        "Royal Bank Of Scotland",
                        "45",
                        "SELL"});
#line 12
 testRunner.Then("open the following bets", ((string)(null)), table3, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("2.  Automatically close trades at bullbearings")]
        public virtual void _2_AutomaticallyCloseTradesAtBullbearings()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("2.  Automatically close trades at bullbearings", ((string[])(null)));
#line 17
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Username",
                        "Password"});
            table4.AddRow(new string[] {
                        "jpcgoodby",
                        "trigger"});
#line 18
 testRunner.Given("the valid account", ((string)(null)), table4, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Code",
                        "Name",
                        "Amount",
                        "Type"});
            table5.AddRow(new string[] {
                        "LLOY",
                        "Lloyds Bank",
                        "100",
                        "BUY"});
            table5.AddRow(new string[] {
                        "RBS",
                        "Royal Bank Of Scotland",
                        "45",
                        "SELL"});
#line 21
 testRunner.And("the following bets", ((string)(null)), table5, "And ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Code",
                        "Name",
                        "Amount",
                        "Type"});
            table6.AddRow(new string[] {
                        "LLOY",
                        "Lloyds Bank",
                        "100",
                        "BUY"});
            table6.AddRow(new string[] {
                        "RBS",
                        "Royal Bank Of Scotland",
                        "45",
                        "SELL"});
#line 25
 testRunner.Then("close the following bets", ((string)(null)), table6, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("3.  Verify trade latest prices")]
        public virtual void _3_VerifyTradeLatestPrices()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("3.  Verify trade latest prices", ((string[])(null)));
#line 30
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Username",
                        "Password"});
            table7.AddRow(new string[] {
                        "jpcgoodby",
                        "trigger"});
#line 31
 testRunner.Given("the valid account", ((string)(null)), table7, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Code",
                        "Name",
                        "Bid",
                        "Offer",
                        "Security"});
            table8.AddRow(new string[] {
                        "LLOY",
                        "Lloyds Bank",
                        "60",
                        "62",
                        "FTSE"});
            table8.AddRow(new string[] {
                        "RBS",
                        "Royal Bank Of Scotland",
                        "300",
                        "302",
                        "FTSE"});
#line 34
 testRunner.And("the following stocks", ((string)(null)), table8, "And ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Code",
                        "Name",
                        "Bid",
                        "Offer"});
            table9.AddRow(new string[] {
                        "LLOY",
                        "Lloyds Bank",
                        "60",
                        "62"});
            table9.AddRow(new string[] {
                        "RBS",
                        "Royal Bank Of Scotland",
                        "300",
                        "302"});
#line 38
 testRunner.Then("following stocks price should be updated", ((string)(null)), table9, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
